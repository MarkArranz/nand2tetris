// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load, sel=address[0..2],
        a=load0to7, b=load8to15, c=load16to23, d=load24to31,
        e=load32to39, f=load40to47, g=load48to55, h=load56to63);

    RAM8(in=in, load=load0to7, address=address[3..5], out=reg0to7);
    RAM8(in=in, load=load8to15, address=address[3..5], out=reg8to15);
    RAM8(in=in, load=load16to23, address=address[3..5], out=reg16to23);
    RAM8(in=in, load=load24to31, address=address[3..5], out=reg24to31);
    RAM8(in=in, load=load32to39, address=address[3..5], out=reg32to39);
    RAM8(in=in, load=load40to47, address=address[3..5], out=reg40to47);
    RAM8(in=in, load=load48to55, address=address[3..5], out=reg48to55);
    RAM8(in=in, load=load56to63, address=address[3..5], out=reg56to63);

    Mux8Way16(
        a=reg0to7, b=reg8to15, c=reg16to23, d=reg24to31,
        e=reg32to39, f=reg40to47, g=reg48to55, h=reg56to63,
        sel=address[0..2], out=out);
}